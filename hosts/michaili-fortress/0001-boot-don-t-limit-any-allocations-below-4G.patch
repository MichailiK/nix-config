From 6e0af1354d0d4a7b1c3ecc62827e0936b482b236 Mon Sep 17 00:00:00 2001
From: andre4ik3 <andre4ik3@fastmail.com>
Date: Tue, 11 Mar 2025 10:46:50 +0400
Subject: [PATCH] boot: don't limit any allocations below 4G

(super dirty hack)
---
 src/boot/efi/boot.c      | 4 ++--
 src/boot/efi/linux_x86.c | 6 +++---
 src/boot/efi/stub.c      | 4 ++--
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/boot/efi/boot.c b/src/boot/efi/boot.c
index ecbb4e0509..62fe454736 100644
--- a/src/boot/efi/boot.c
+++ b/src/boot/efi/boot.c
@@ -2297,10 +2297,10 @@ static EFI_STATUS initrd_prepare(
         }
 
         _cleanup_pages_ Pages pages = xmalloc_pages(
-                AllocateMaxAddress,
+                AllocateAnyPages,
                 EfiLoaderData,
                 EFI_SIZE_TO_PAGES(size),
-                UINT32_MAX /* Below 4G boundary. */);
+                0 /* Ignored. */);
         uint8_t *p = PHYSICAL_ADDRESS_TO_POINTER(pages.addr);
 
         STRV_FOREACH(i, entry->initrd) {
diff --git a/src/boot/efi/linux_x86.c b/src/boot/efi/linux_x86.c
index 58b1b3cc8f..70bbdc66cc 100644
--- a/src/boot/efi/linux_x86.c
+++ b/src/boot/efi/linux_x86.c
@@ -163,10 +163,10 @@ EFI_STATUS linux_exec_efi_handover(
         _cleanup_pages_ Pages linux_relocated = {};
         if (POINTER_TO_PHYSICAL_ADDRESS(linux_buffer) + linux_length > UINT32_MAX || kernel_size_in_memory > linux_length) {
                 linux_relocated = xmalloc_pages(
-                                AllocateMaxAddress,
+                                AllocateAnyPages,
                                 EfiLoaderCode,
                                 EFI_SIZE_TO_PAGES(kernel_size_in_memory > linux_length ? kernel_size_in_memory : linux_length),
-                                UINT32_MAX);
+                                0);
                 linux_buffer = memcpy(
                                 PHYSICAL_ADDRESS_TO_POINTER(linux_relocated.addr), linux_buffer, linux_length);
                 if (kernel_size_in_memory > linux_length)
@@ -176,7 +176,7 @@ EFI_STATUS linux_exec_efi_handover(
         _cleanup_pages_ Pages initrd_relocated = {};
         if (!can_4g && POINTER_TO_PHYSICAL_ADDRESS(initrd_buffer) + initrd_length > UINT32_MAX) {
                 initrd_relocated = xmalloc_pages(
-                                AllocateMaxAddress, EfiLoaderData, EFI_SIZE_TO_PAGES(initrd_length), UINT32_MAX);
+                                AllocateAnyPages, EfiLoaderData, EFI_SIZE_TO_PAGES(initrd_length), 0);
                 initrd_buffer = memcpy(
                                 PHYSICAL_ADDRESS_TO_POINTER(initrd_relocated.addr),
                                 initrd_buffer,
diff --git a/src/boot/efi/stub.c b/src/boot/efi/stub.c
index 9aa605b756..599c09ba5f 100644
--- a/src/boot/efi/stub.c
+++ b/src/boot/efi/stub.c
@@ -50,10 +50,10 @@ static EFI_STATUS combine_initrds(
         }
 
         _cleanup_pages_ Pages pages = xmalloc_pages(
-                        AllocateMaxAddress,
+                        AllocateAnyPages,
                         EfiLoaderData,
                         EFI_SIZE_TO_PAGES(n),
-                        UINT32_MAX /* Below 4G boundary. */);
+                        0 /* Ignored. */);
         uint8_t *p = PHYSICAL_ADDRESS_TO_POINTER(pages.addr);
         for (size_t i = 0; i < n_initrds; i++) {
                 if (!initrds[i])
-- 
2.48.1

